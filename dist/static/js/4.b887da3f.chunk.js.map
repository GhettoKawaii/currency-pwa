{"version":3,"sources":["components/CoinsBlock.jsx","components/CurrencyButton.jsx","pages/HomePage.jsx"],"names":["CoinsBlock","_ref","img_url","currName","RUB","greetings","USD","UAH","selectCoin","className","react_default","a","createElement","onClick","src","alt","CurrencyButton","selectCurrency","coinsInfo","url","name","currencyNames","HomePage","state","selectedCoin","selectedCurrency","volume","handleChange","e","_this","setState","target","value","coin","currency","this","props","getCoinsTriggered","_this2","_this$state","mapCoins","isLoading","Object","objectSpread","currencies","BTC","ETH","XRP","react","map","key","Pulse_default","CoinsBlock_CoinsBlock","Fragment","Fade_default","top","type","onChange","bottom","CurrencyButton_CurrencyButton","length","Spin_default","concat","Number","findIndex","toFixed","Component","connect","getCoins","data","dispatch"],"mappings":"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","file":"static/js/4.b887da3f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/CoinsBlock.scss\";\r\n\r\nexport default function CoinsBlock({\r\n  img_url,\r\n  currName,\r\n  greetings,\r\n  RUB,\r\n  USD,\r\n  UAH,\r\n  selectCoin,\r\n  className\r\n}) {\r\n  return (\r\n    <div className={className} onClick={() => selectCoin(currName)}>\r\n      <div className=\"curr-face\">\r\n        <img src={img_url} alt=\"currency\" />\r\n        <span>{currName}</span>\r\n      </div>\r\n      <div className=\"curr-values-container\">\r\n        <div>\r\n          <p>USD: </p>\r\n          <p>UAH: </p>\r\n          <p>RUB: </p>\r\n        </div>\r\n        <div>\r\n          <p>{USD}</p>\r\n          <p>{UAH}</p>\r\n          <p>{RUB}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/CurrencyButton.scss\";\r\n\r\nexport default function CurrencyButton({\r\n  currName,\r\n  selectCurrency,\r\n  className\r\n}) {\r\n  return (\r\n    <button className={className} onClick={() => selectCurrency(currName)}>\r\n      {currName}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Pulse from \"react-reveal/Pulse\";\r\nimport Spin from \"react-reveal/Spin\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport \"./styles/HomePage.scss\";\r\n\r\nimport { getCoinsTriggered } from \"../redux/actions/getCurrencies\";\r\n\r\nimport CoinsBlock from \"../components/CoinsBlock\";\r\nimport CurrencyButton from \"../components/CurrencyButton\";\r\n\r\nconst coinsInfo = [\r\n  {\r\n    url: \"https://endotech.io/img/coinicon/BTC.png\",\r\n    name: \"BTC\"\r\n  },\r\n  {\r\n    url: \"https://endotech.io/img/coinicon/ETH.png\",\r\n    name: \"ETH\"\r\n  },\r\n  {\r\n    url: \"https://endotech.io/img/coinicon/XRP.png\",\r\n    name: \"XRP\"\r\n  }\r\n];\r\n\r\nconst currencyNames = [\"USD\", \"UAH\", \"RUB\"];\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    selectedCoin: null,\r\n    selectedCurrency: null,\r\n    volume: \"\"\r\n  };\r\n  componentDidMount() {\r\n    this.props.getCoinsTriggered();\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      volume: e.target.value\r\n    });\r\n  };\r\n\r\n  selectCoin = coin => {\r\n    this.setState({\r\n      selectedCoin: coin\r\n    });\r\n  };\r\n\r\n  selectCurrency = currency => {\r\n    this.setState({\r\n      selectedCurrency: currency\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { selectedCoin, selectedCurrency, volume } = this.state;\r\n    let mapCoins = [];\r\n    if (!this.props.isLoading) {\r\n      mapCoins = [\r\n        {\r\n          ...this.props.currencies.BTC,\r\n          ...coinsInfo[0]\r\n        },\r\n        {\r\n          ...this.props.currencies.ETH,\r\n          ...coinsInfo[1]\r\n        },\r\n        {\r\n          ...this.props.currencies.XRP,\r\n          ...coinsInfo[2]\r\n        }\r\n      ];\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <h1>Currency Conversion</h1>\r\n        <div className=\"currencies-block\">\r\n          {mapCoins.map((coin, key) => {\r\n            return (\r\n              <Pulse>\r\n                <CoinsBlock\r\n                  className={\r\n                    coin.name === selectedCoin\r\n                      ? \"currency-block-wrapper active-block\"\r\n                      : \"currency-block-wrapper\"\r\n                  }\r\n                  key={key}\r\n                  img_url={coin.url}\r\n                  currName={coin.name}\r\n                  RUB={coin.RUB}\r\n                  USD={coin.USD}\r\n                  UAH={coin.UAH}\r\n                  selectCoin={this.selectCoin}\r\n                />\r\n              </Pulse>\r\n            );\r\n          })}\r\n        </div>\r\n        {selectedCoin && (\r\n          <>\r\n            <Fade top>\r\n              <h2>Selected Coin: {selectedCoin}</h2>\r\n              <div className=\"volume\">\r\n                <label>Volume:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={this.handleChange}\r\n                  value={volume}\r\n                />\r\n              </div>\r\n            </Fade>\r\n            <Fade bottom>\r\n              <div className=\"buttons-block\">\r\n                {currencyNames.map((currency, key) => {\r\n                  return (\r\n                    <CurrencyButton\r\n                      currName={currency}\r\n                      key={key}\r\n                      selectCurrency={this.selectCurrency}\r\n                      className={\r\n                        selectedCurrency === currency\r\n                          ? \"currency-button active\"\r\n                          : \"currency-button\"\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </Fade>\r\n            {selectedCurrency && volume.length > 0 && (\r\n              <Spin>\r\n                <p className=\"result\">\r\n                  <b>{`${volume} ${selectedCoin}`}</b> will be{\" \"}\r\n                  <b>\r\n                    {(\r\n                      Number(volume) *\r\n                      mapCoins[\r\n                        mapCoins.findIndex(coin => coin.name === selectedCoin)\r\n                      ][selectedCurrency]\r\n                    ).toFixed(2)}\r\n                  </b>\r\n                  &nbsp;in <b>{selectedCurrency}</b>\r\n                </p>\r\n              </Spin>\r\n            )}\r\n          </>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.getCoins.isLoading,\r\n  currencies: state.getCoins.data\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getCoinsTriggered() {\r\n    dispatch(getCoinsTriggered());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);\r\n"],"sourceRoot":""}